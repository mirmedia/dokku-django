#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x

if [[ $1 == django* ]]; then

  if [[ -z $2 ]]; then
    echo "You must specify an app name"
    exit 1
  else
    APP="$2"

    if [[ ! -d "$DOKKU_ROOT/$APP" ]]; then
      echo "$APP does not exist."
      exit 1
    fi

  fi
fi

case "$1" in
  django:collect)
    echo "-----> Collecting Django Static Files."
    dokku run "$APP" python manage.py collectstatic
    ;;
  django:syncdb)
    echo "-----> Syncing database."
    dokku run "$APP" python manage.py syncdb
    ;;
  django:rebuild_index)
    echo "-----> Rebuilding full-text indexes."
    dokku run "$APP" python manage.py rebuild_index
    ;;
  django:serve)
    if [[ -z $3 ]]; then
      echo "You must specify a Folder to serve."
      exit 1
    else
      echo "-----> Preparing nginx config."
      $PLUGIN_PATH/django/commands.py -r "$DOKKU_ROOT/$APP" --reload --persistent-root "$DOKKU_ROOT/$APP/persistent" --serve $3
      dokku persistent:create "$APP" $3
    fi
    ;;
  django:init)
    DJANGO_SECRET=$(openssl rand -base64 32|base64)
    dokku postgresql:create "$APP"
    dokku django:serve "$APP" "static"
    dokku django:serve "$APP" "media"
    dokku config:set "$APP" DJANGO_SETTINGS_MODULE=web.settings_cloud DJANGO_DEBUG=False DJANGO_SECRET_KEY=$DJANGO_SECRET
    ;;
  django)
    shift 2
    dokku run "$APP" python manage.py $@
    ;;
  help)
    cat && cat<<EOF
    django:syncdb <app>                             Runs the syncdb command for <app>.
    django:rebuild_index <app>                      Runs the rebuild_index command for <app>.
    django:collect <app>                            Collects the static files for <app>.
    django:serve <app> <folder>                     Serves the files in <folder> with nginx for <app>.
    django <app> <command>                          Executes django manage commands for the Project.
EOF
    ;;

esac
